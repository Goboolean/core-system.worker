name: CI

env:
  INFLUXDB_URL: http://localhost:8086
  INFLUXDB_BUCKET: bucket
  INFLUXDB_TOKEN: token
  INFLUXDB_ORG: org
  INFLUXDB_TRADE_BUCKET: trade
  INFLUXDB_ORDER_EVENT_BUCKET: orderEvent
  INFLUXDB_ANNOTATION_BUCKET: annotationBucket
  
on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      influxdb:
        image: influxdb:latest
        ports:
          - 8086:8086
        env:
          DOCKER_INFLUXDB_INIT_MODE: setup
          DOCKER_INFLUXDB_INIT_USERNAME: admin
          DOCKER_INFLUXDB_INIT_PASSWORD: password
          DOCKER_INFLUXDB_INIT_ORG: ${{ env.INFLUXDB_ORG }}
          DOCKER_INFLUXDB_INIT_BUCKET: ${{ env.INFLUXDB_BUCKET }}
          DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${{ env.INFLUXDB_TOKEN }}
      
      kafka:
        image: bitnami/kafka:latest
        ports:
          - 9092:9092
        env:
          KAFKA_CFG_KAFKA_LISTENERS: PLAINTEXT://:9092
          KAFKA_CFG_KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
          ALLOW_PLAINTEXT_LISTENER: "yes"
    
    steps:
      - name: Issue Token
        run: |
          sleep 5
          CONTAINER_ID=$(docker ps | grep 'influxdb:latest' | awk '{print $1}')
          OUTPUT=$(docker exec ${CONTAINER_ID} influx auth create --org org --read-buckets --write-buckets --description "New token for testing")
          INFLUXDB_TOKEN=$(echo ${OUTPUT} | grep 'New token for testing' | awk '{print $6}')

      - name: Create Bucket
        run: |
          CONTAINER_ID=$(docker ps | grep 'influxdb:latest' | awk '{print $1}')
          docker exec ${CONTAINER_ID} influx bucket create --token ${INFLUXDB_TOKEN} --name ${INFLUXDB_TRADE_BUCKET} --org ${INFLUXDB_ORG}
          docker exec ${CONTAINER_ID} influx bucket create --token ${INFLUXDB_TOKEN} --name ${INFLUXDB_ORDER_EVENT_BUCKET} --org ${INFLUXDB_ORG}
          docker exec ${CONTAINER_ID} influx bucket create --token ${INFLUXDB_TOKEN} --name ${INFLUXDB_ANNOTATION_BUCKET} --org ${INFLUXDB_ORG}      
     
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.22.2"
      
      - name: Run Tests
        run: make test

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      
      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: "1.22.0"
     
      - name: Run Lint
        uses: golangci/golangci-lint-action@v6.0.1
        with:
          version: latest
